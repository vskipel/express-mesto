{"version":3,"sources":["images/mesto-logo.svg","components/Header.js","context/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/ImagePopup.js","utils/api.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","logo","alt","CurrentUserContext","React","createContext","Card","props","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","type","aria-label","onClick","onCardDelete","link","name","onCardClick","onCardLike","length","Main","avatar","onEditAvatar","onEditProfile","about","onAddPlace","cards","map","card","Footer","ImagePopup","isOpen","onClose","handleOriginalResponse","res","ok","json","Promise","reject","status","api","config","this","_url","url","_token","token","fetch","method","headers","authorization","then","data","body","JSON","stringify","id","PopupWithForm","action","noValidate","onSubmit","title","children","button","EditProfilePopup","useState","setName","description","setDescription","useEffect","e","preventDefault","onUpdateUser","maxLength","minLength","placeholder","required","onChange","target","value","EditAvatarPopup","inputRef","useRef","onUpdateAvatar","current","ref","AddPlacePopup","inputRefName","inputRefLink","App","isEditProfilePopupOpen","profilePopupIsOpen","isAddPlacePopupOpen","placePopupIsOpen","isEditAvatarPopupOpen","avatarPopupIsOpen","closeAllPopups","imagePopupIsOpen","selectedCardData","selectedCard","isImagePopupOpen","currentUserUpdate","getProfileInfo","catch","err","setCards","getInitialCards","item","Provider","liker","changeLikeCardStatus","newCard","newCards","oldCard","deleteCard","newCardsReduced","filter","c","setProfileInfo","addCard","updateAvatar","console","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAAe,MAA0B,uCCW1BA,MATf,WACE,OAEI,wBAAQC,UAAU,SAAlB,SACI,qBAAKC,IAAKC,EAAMC,IAAI,6GAAwBH,UAAU,YCHjDI,EADmBC,IAAMC,gBC+CzBC,MA7Cf,SAAcC,GAEZ,IAAMC,EAAcJ,IAAMK,WAAWN,GAG/BO,EAAQH,EAAMI,MAAMC,MAAQJ,EAAYI,IAGxCC,EAAyB,8BACNH,EAAQ,8BAAgC,IAI3DI,EAAUP,EAAMQ,MAAMC,MAAK,SAAAC,GAAC,OAAIA,EAAEL,MAAQJ,EAAYI,OAGtDM,EAAuB,4BACNJ,EAAU,2BAA6B,qBAe9D,OACE,qBAAIf,UAAU,OAAd,UACE,wBAAQA,UAAWc,EAA2BM,KAAK,SAASC,aAAW,6CAAUC,QANrF,WACEd,EAAMe,aAAaf,MAMjB,qBAAKR,UAAU,cAAcC,IAAKO,EAAMgB,KAAMrB,IAAKK,EAAMiB,KAAMH,QAfnE,WACEd,EAAMkB,YAAYlB,MAehB,sBAAKR,UAAU,iBAAf,UACE,oBAAIA,UAAU,cAAd,SAA6BQ,EAAMiB,OACnC,wBAAQzB,UAAWmB,EAAyBC,KAAK,SAASC,aAAW,2BAAOC,QAdlF,WACEd,EAAMmB,WAAWnB,MAcb,qBAAKR,UAAU,6BAAf,SAA6CQ,EAAMQ,MAAMY,gBCGlDC,MAzCf,SAAcrB,GAEZ,IAAMC,EAAcJ,IAAMK,WAAWN,GAIrC,OACE,mCACA,uBAAMJ,UAAU,OAAhB,UAEE,0BAASA,UAAU,UAAnB,UACE,qBAAKC,IAAKQ,EAAYqB,OAAQ3B,IAAI,uCAASH,UAAU,oBACrD,qBAAKA,UAAU,uBAAuBsB,QAASd,EAAMuB,eACrD,sBAAK/B,UAAU,eAAf,UACE,oBAAIA,UAAU,sBAAd,SAAqCS,EAAYgB,OACjD,wBAAQL,KAAK,SAASpB,UAAU,cAAcsB,QAASd,EAAMwB,gBAC7D,mBAAGhC,UAAU,yBAAb,SAAuCS,EAAYwB,WAErD,wBAAQb,KAAK,SAASpB,UAAU,aAAasB,QAASd,EAAM0B,gBAG9D,oBAAIlC,UAAU,QAAd,SAEIQ,EAAM2B,MAAMC,KAAI,SAACC,GAAD,OAAU,cAAC,EAAD,CAExBxB,IAAKwB,EAAKxB,IACVY,KAAMY,EAAKZ,KACXD,KAAMa,EAAKb,KACXR,MAAOqB,EAAKrB,MACZJ,MAAOyB,EAAKzB,MACZc,YAAalB,EAAMkB,YACnBC,WAAYnB,EAAMmB,WAClBJ,aAAcf,EAAMe,cARfc,EAAKxB,gBCpBPyB,MATf,WACE,OAEE,wBAAQtC,UAAU,SAAlB,SACE,mBAAGA,UAAU,oBAAb,uCCaSuC,MAff,SAAoB/B,GAIlB,OACE,qBAAKR,UAAS,iCAA4BQ,EAAMgC,OAAS,eAAiB,IAA1E,SACE,sBAAKxC,UAAU,yBAAf,UACE,wBAAQA,UAAU,4CAA4CoB,KAAK,SAASC,aAAW,6CAAUC,QAASd,EAAMiC,UAChH,qBAAKzC,UAAU,eAAeC,IAAKO,EAAM6B,KAAKb,KAAMrB,IAAKK,EAAM6B,KAAKZ,OACpE,mBAAGzB,UAAU,kBAAb,SAAgCQ,EAAM6B,KAAKZ,a,cCX7CiB,EAAyB,SAACC,GAC9B,OAAKA,EAAIC,GAGFD,EAAIE,OAFFC,QAAQC,OAAR,iBAAyBJ,EAAIK,UA6GzBC,EALH,IAnGZ,WACE,WAAYC,GAAS,oBACnBC,KAAKC,KAAOF,EAAOG,IACnBF,KAAKG,OAASJ,EAAOK,MAHzB,8DASI,OAAOC,MAAM,GAAD,OAAIL,KAAKC,KAAT,UAAuB,CACjCK,OAAQ,MACRC,QAAS,CACPC,cAAeR,KAAKG,UAErBM,KAAKlB,KAdZ,8BAiBUmB,GACN,OAAOL,MAAM,GAAD,OAAIL,KAAKC,KAAT,WAAwB,CAClCK,OAAQ,OACRC,QAAS,CACPC,cAAeR,KAAKG,OACpB,eAAgB,oBAGlBQ,KAAMC,KAAKC,UAAU,CACnBvC,KAAMoC,EAAKpC,KACXD,KAAMqC,EAAKrC,SAEZoC,KAAKlB,KA7BZ,iCAgCauB,GACT,OAAOT,MAAM,GAAD,OAAIL,KAAKC,KAAT,kBAAuBa,GAAM,CACvCR,OAAQ,SACRC,QAAS,CACPC,cAAeR,KAAKG,UAErBM,KAAKlB,KAtCZ,2CA0CuBuB,EAAIlD,GACvB,OAAIA,EACKyC,MAAM,GAAD,OAAIL,KAAKC,KAAT,wBAA6Ba,GAAM,CAC7CR,OAAQ,MACRC,QAAS,CACPC,cAAeR,KAAKG,UAErBM,KAAKlB,GAEDc,MAAM,GAAD,OAAIL,KAAKC,KAAT,wBAA6Ba,GAAM,CAC7CR,OAAQ,SACRC,QAAS,CACPC,cAAeR,KAAKG,UAErBM,KAAKlB,KAxDd,mCA4DelB,GACX,OAAOgC,MAAM,GAAD,OAAIL,KAAKC,KAAT,oBAAiC,CACzCK,OAAQ,QACRC,QAAS,CACPC,cAAeR,KAAKG,OACpB,eAAgB,oBAElBQ,KAAMC,KAAKC,UAAU,CACnBlC,OAAQN,EAAKM,WAGhB8B,KAAKlB,KAvEZ,uCA4EI,OAAOc,MAAM,GAAD,OAAIL,KAAKC,KAAT,aAA0B,CACpCK,OAAQ,MACRC,QAAS,CACPC,cAAeR,KAAKG,UAErBM,KAAKlB,KAjFZ,qCAoFiBmB,GACb,OAAOL,MAAM,GAAD,OAAIL,KAAKC,KAAT,aAA0B,CACpCK,OAAQ,QACRC,QAAS,CACPC,cAAeR,KAAKG,OACpB,eAAgB,oBAElBQ,KAAMC,KAAKC,UAAU,CACnBvC,KAAMoC,EAAKpC,KACXQ,MAAO4B,EAAK5B,UAEb2B,KAAKlB,OA/FZ,KAmGY,CAAQ,CAClBW,IAAK,8CACLE,MAAO,yCCzFMW,MAhBf,SAAuB1D,GACrB,OACE,qBAAKR,UAAS,2BAAsBQ,EAAMiB,KAA5B,YAAoCjB,EAAMgC,OAAS,eAAiB,IAAlF,SACE,sBAAKxC,UAAU,mBAAf,UACE,wBAAQA,UAAU,oBAAoBoB,KAAK,SAASC,aAAW,6CAAUC,QAASd,EAAMiC,UACxF,uBAAMzC,UAAU,OAAOyD,OAAO,MAAMU,OAAO,IAAI1C,KAAI,UAAKjB,EAAMiB,MAAQ2C,YAAU,EAACC,SAAU7D,EAAM6D,SAAjG,UACE,oBAAIrE,UAAU,eAAd,SAA8BQ,EAAM8D,QACnC9D,EAAM+D,SACP,wBAAQvE,UAAU,qBAAqBoB,KAAK,SAASC,aAAYb,EAAMgE,OAAvE,SAAgFhE,EAAMgE,kBCyCjFC,MAhDf,SAA0BjE,GAExB,IAAMC,EAAcJ,IAAMK,WAAWN,GAFP,EAKNC,IAAMqE,SAAS,IALT,mBAKvBjD,EALuB,KAKjBkD,EALiB,OAMQtE,IAAMqE,SAAS,IANvB,mBAMvBE,EANuB,KAMVC,EANU,KAoC9B,OAjBAxE,IAAMyE,WAAU,WACdH,EAAQlE,EAAYgB,MACpBoD,EAAepE,EAAYwB,SAC1B,CAACxB,IAeJ,eAAC,EAAD,CAAegB,KAAM,eAAgB6C,MAAM,4HAAwB9B,OAAQhC,EAAMgC,OAAQgC,OAAO,yDAAY/B,QAASjC,EAAMiC,QAAS4B,SAbpI,SAAsBU,GAEpBA,EAAEC,iBAGFxE,EAAMyE,aAAa,CACjBxD,KAAMA,EACNQ,MAAO2C,KAMX,UACE,uBAAOM,UAAU,KAAKC,UAAU,IAAInF,UAAU,+BAA+BoB,KAAK,OAAOK,KAAK,OAC5F2D,YAAY,8CAAWC,UAAQ,EAAChE,aAAW,gEAAciE,SA9B7D,SAA0BP,GACxBJ,EAAQI,EAAEQ,OAAOC,QA6BsEA,MAAO/D,GAAQ,KACtG,sBAAMzB,UAAU,QAAQiE,GAAG,eAC3B,uBAAOiB,UAAU,MAAMC,UAAU,IAAInF,UAAU,8BAA8BoB,KAAK,OAAOK,KAAK,MAC5F2D,YAAY,8FAAmBC,UAAQ,EAAChE,aAAW,gEAAciE,SA7BrE,SAAiCP,GAC/BF,EAAeE,EAAEQ,OAAOC,QA4B8EA,MAAOZ,GAAe,KAC5H,sBAAM5E,UAAU,QAAQiE,GAAG,kBCzBhBwB,MAnBf,SAAyBjF,GACvB,IAAMkF,EAAWrF,IAAMsF,SASvB,OACE,eAAC,EAAD,CAAelE,KAAM,gBAAiB6C,MAAM,wFAAkB9B,OAAQhC,EAAMgC,OAAQgC,OAAO,yDAAY/B,QAASjC,EAAMiC,QAAS4B,SARjI,SAAsBU,GACpBA,EAAEC,iBACFxE,EAAMoF,eAAe,CACnB9D,OAAQ4D,EAASG,QAAQL,SAK3B,UACE,uBAAOM,IAAKJ,EAAU1F,UAAU,+BAA+BoB,KAAK,MAAMK,KAAK,OAAO2D,YAAY,yFAChGC,UAAQ,EAAChE,aAAW,kEACtB,sBAAMrB,UAAU,QAAQiE,GAAG,mBCgBlB8B,MA7Bf,SAAuBvF,GAErB,IAAMwF,EAAe3F,IAAMsF,SACrBM,EAAe5F,IAAMsF,SAU3B,OACE,eAAC,EAAD,CAAelE,KAAM,WAAY6C,MAAM,gEAAcE,OAAO,6CAC1DhC,OAAQhC,EAAMgC,OACdC,QAASjC,EAAMiC,QACf4B,SAZJ,SAAsBU,GACpBA,EAAEC,iBACFxE,EAAM0B,WAAW,CACfT,KAAMuE,EAAaH,QAAQL,MAC3BhE,KAAMyE,EAAaJ,QAAQL,SAK7B,UAIE,uBAAOM,IAAKE,EAAcd,UAAU,KAAKC,UAAU,IAAInF,UAAU,gCAAgCoB,KAAK,OAAOK,KAAK,OAChH2D,YAAY,mDAAWC,UAAQ,EAAChE,aAAW,kEAC7C,sBAAMrB,UAAU,QAAQiE,GAAG,eAC3B,uBAAO6B,IAAKG,EAAcjG,UAAU,+BAA+BoB,KAAK,MAAMK,KAAK,OAAO2D,YAAY,qGACpGC,UAAQ,EAAChE,aAAW,kEACtB,sBAAMrB,UAAU,QAAQiE,GAAG,mBCgKlBiC,MAhLf,WAAe,MAGyC7F,IAAMqE,UAAS,GAHxD,mBAGLyB,EAHK,KAGmBC,EAHnB,OAIoC/F,IAAMqE,UAAS,GAJnD,mBAIL2B,EAJK,KAIgBC,EAJhB,OAKuCjG,IAAMqE,UAAS,GALtD,mBAKL6B,EALK,KAKkBC,EALlB,KAoBPC,EAAiB,WACrBD,EAAkB,IAClBJ,EAAmB,IACnBE,EAAiB,IACjBI,EAAiB,IACjBC,EAAiB,KAzBN,EA8B6BtG,IAAMqE,SAAS,IA9B5C,mBA8BLkC,EA9BK,KA8BSD,EA9BT,OA+BiCtG,IAAMqE,UAAS,GA/BhD,mBA+BLmC,EA/BK,KA+BaH,EA/Bb,OAuC4BrG,IAAMqE,SAAS,IAvC3C,mBAuCNjE,EAvCM,KAuCOqG,EAvCP,KAwCbzG,IAAMyE,WAAU,WACd7B,EAAI8D,iBACDnD,MAAK,SAAAC,GACJiD,EAAkBjD,MAEnBmD,OAAM,SAACC,GAAD,MAAS,yCAAaA,OAC9B,IA9CU,MAqEe5G,IAAMqE,SAAS,IArE9B,mBAqELvC,EArEK,KAqEE+E,EArEF,KAuIb,OAhEA7G,IAAMyE,WAAU,WACd7B,EAAIkE,kBACDvD,MAAK,SAAAC,GACJqD,EAASrD,EAAKzB,KAAI,SAACgF,GAAD,MAAW,CAC3BvG,IAAKuG,EAAKvG,IACVW,KAAM4F,EAAK5F,KACXR,MAAOoG,EAAKpG,MACZS,KAAM2F,EAAK3F,KACXb,MAAOwG,EAAKxG,cAEfoG,OAAM,SAACC,GAAD,MAAS,yCAAaA,OAE9B,IAqDD,cAAC,EAAmBI,SAApB,CAA6B7B,MAAO/E,EAApC,SACA,sBAAKT,UAAU,OAAf,UACI,cAAC,EAAD,IAEA,cAAC,EAAD,CACE+B,aArIsB,WAC5ByE,GAAkB,IAqIZtE,WA9HmB,WACzBoE,GAAiB,IA8HXtE,cAnIuB,WAC7BoE,GAAmB,IAmIb1E,YA/GgB,SAACW,GACvBqE,GAAiB,GACjBC,EAAiBtE,IA8GXF,MAAOA,EACPR,WA7DR,SAAwBU,GAEtB,IAAMtB,EAAUsB,EAAKrB,MAAMC,MAAK,SAAAqG,GAAK,OAAIA,EAAMzG,MAAQJ,EAAYI,OAInEoC,EAAIsE,qBAAqBlF,EAAKxB,KAAME,GAAS6C,MAAK,SAAC4D,GAGnD,IAAMC,EAAWtF,EAAMC,KAAI,SAACsF,GAC1B,OAAIA,EAAQ7G,MAAQwB,EAAKxB,IAChB2G,EAGGE,KAKdR,EAASO,MAERT,OAAM,SAACC,GAAD,MAAS,yCAAaA,MAyCvB1F,aAtCR,SAA0Bc,GAEVA,EAAKzB,MAAMC,IAAQJ,EAAYI,IAG7CoC,EAAI0E,WAAWtF,EAAKxB,KAAK+C,MAAK,WAG5B,IAAMgE,EAAkBzF,EAAM0F,QAAO,SAACC,GAAD,OAAOA,EAAEjH,MAAQwB,EAAKxB,OAG3DqG,EAASU,MAEVZ,OAAM,SAACC,GAAD,MAAS,yCAAaA,QA2BzB,cAAC,EAAD,CACEzE,OAAQ2D,EACR1D,QAASgE,EACTxB,aAxGR,SAA0BpB,GACxBZ,EAAI8E,eAAelE,GAChBD,MAAK,SAAAjB,GACJmE,EAAkBnE,GAClB8D,OAEDO,OAAM,SAACC,GAAD,MAAS,yCAAaA,QAoG3B,cAAC,EAAD,CACEzE,OAAQ6D,EACR5D,QAASgE,EACTvE,WAhCR,SAA8B2B,GAC5BZ,EAAI+E,QAAQnE,GACTD,MAAK,SAAC4D,GACLN,EAAS,CAACM,GAAF,mBAAcrF,KACtBsE,OAEDO,OAAM,SAACC,GAAD,MAAS,yCAAaA,QA4B3B,cAAC,EAAD,CACEzE,OAAQ+D,EACR9D,QAASgE,EACTb,eAxGR,SAA4BpE,GAC1ByB,EAAIgF,aAAazG,GACdoC,MAAK,SAAAjB,GACJuF,QAAQC,IAAIxF,GACZmE,EAAkBnE,GAClB8D,OAEDO,OAAM,SAACC,GAAD,MAAS,yCAAaA,QAmG3B,cAAC,EAAD,CACEzE,OAAQqE,EACRpE,QAASgE,EACTpE,KAAMuE,IAER,cAAC,EAAD,UCxKOwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1E,MAAK,YAAkD,IAA/C2E,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9be740f7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/mesto-logo.a307e1c4.svg\";","import logo from '../images/mesto-logo.svg';\n\nfunction Header() {\n  return (\n\n      <header className=\"header\">\n          <img src={logo} alt=\"Место - логотип сайта\" className=\"logo\" /> \n        </header>\n  );\n}\n\nexport default Header;","import React from 'react';\n\nexport const CurrentUserContext = React.createContext();\nexport default CurrentUserContext;\n\n","import React from 'react';\nimport CurrentUserContext from '../context/CurrentUserContext'\n\n\nfunction Card(props) {\n  // подписываемся на контекст о пользователе хуком \n  const currentUser = React.useContext(CurrentUserContext);\n\n  // Определяем, являемся ли мы владельцем текущей карточки\n  const isOwn = props.owner._id === currentUser._id;\n\n  // Создаём переменную, которую после зададим в `className` для кнопки удаления\n  const cardDeleteButtonClassName = (\n    `card__button-delete ${isOwn ? 'card__button-delete_visible' : ''}`\n  ); \n\n  // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\n  const isLiked = props.likes.some(i => i._id === currentUser._id);\n\n  // Создаём переменную, которую после зададим в `className` для кнопки лайка\n  const cardLikeButtonClassName = (\n    `card__button-like ${isLiked ? 'card__button-like_active' : 'card__button-like'}`\n  ); ; \n  \n  function handleClick() {\n    props.onCardClick(props);\n  } \n\n  function handleLikeClick() {\n    props.onCardLike(props);\n  } \n\n  function handleDeleteClick() {\n    props.onCardDelete(props);\n  }   \n\n  return (\n    <li className=\"card\">\n      <button className={cardDeleteButtonClassName} type=\"button\" aria-label=\"Удалить\" onClick={handleDeleteClick}></button>\n      <img className=\"card__image\" src={props.link} alt={props.name} onClick={handleClick}/>\n      <div className=\"card__elements\">\n        <h2 className=\"card__title\">{props.name}</h2>\n        <button className={cardLikeButtonClassName} type=\"button\" aria-label=\"Лайк\" onClick={handleLikeClick}></button>\n        <div className=\"card__button-likes-counter\">{props.likes.length}</div>\n      </div>\n    </li>\n  );\n}\n\nexport default Card;\n","import React from 'react';\nimport Card from './Card';\nimport CurrentUserContext from '../context/CurrentUserContext'\n\n\nfunction Main(props) {\n  // подписываемся на контекст о пользователе хуком \n  const currentUser = React.useContext(CurrentUserContext);\n\n\n\n  return (\n    <>\n    <main className=\"main\">\n\n      <section className=\"profile\">\n        <img src={currentUser.avatar} alt=\"аватар\" className=\"profile__avatar\"></img> \n        <div className=\"profile__avatar-edit\" onClick={props.onEditAvatar}></div>\n        <div className=\"profile-info\">\n          <h1 className=\"profile-info__title\">{currentUser.name}</h1>\n          <button type=\"button\" className=\"edit-button\" onClick={props.onEditProfile}/>\n          <p className=\"profile-info__subtitle\">{currentUser.about}</p>\n        </div>\n        <button type=\"button\" className=\"add-button\" onClick={props.onAddPlace}/>\n      </section>\n\n      <ul className=\"cards\">\n        {\n          props.cards.map((card) => <Card \n            key={card._id} \n            _id={card._id} \n            name={card.name} \n            link={card.link} \n            likes={card.likes} \n            owner={card.owner} \n            onCardClick={props.onCardClick} \n            onCardLike={props.onCardLike} \n            onCardDelete={props.onCardDelete}/>)\n        }\n      </ul>\n    </main>\n\n    </>\n  );\n}\n\nexport default Main;","function Footer() {\n  return (\n\n    <footer className=\"footer\">\n      <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\n    </footer>\n  );\n}\n\nexport default Footer;","import React from 'react';\n\nfunction ImagePopup(props) {\n\n\n\n  return (\n    <div className={`popup popup_type_image ${props.isOpen ? \"popup_opened\" : \"\"}`}>\n      <div className=\"popup__image-container\">\n        <button className=\"popup__close-icon_image popup__close-icon\" type=\"button\" aria-label=\"Закрыть\" onClick={props.onClose}/>\n        <img className=\"popup__image\" src={props.card.link} alt={props.card.name} />\n        <p className=\"popup__subtitle\">{props.card.name}</p>\n      </div>\n     </div>\n  );\n}\n\nexport default ImagePopup;","const handleOriginalResponse = (res) => {\n  if (!res.ok) {\n    return Promise.reject(`Error: ${res.status}`);\n  }\n  return res.json();\n}\n\nexport class Api {\n  constructor(config) {\n    this._url = config.url;\n    this._token = config.token;\n\n  }\n\n\n  getInitialCards() {\n    return fetch(`${this._url}/cards`, {\n      method: \"GET\",\n      headers: {\n        authorization: this._token,\n      },\n    }).then(handleOriginalResponse);\n  }\n\n  addCard(data) {\n    return fetch(`${this._url}/cards/`, {\n      method: \"POST\",\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link,\n      })\n    }).then(handleOriginalResponse);\n  }\n\n  deleteCard(id) {\n    return fetch(`${this._url}/cards/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        authorization: this._token,\n      },\n    }).then(handleOriginalResponse);\n  }\n\n\n  changeLikeCardStatus(id, isLiked) {\n    if (isLiked) {\n      return fetch(`${this._url}/cards/likes/${id}`, {\n        method: \"PUT\",\n        headers: {\n          authorization: this._token,\n        },\n      }).then(handleOriginalResponse);\n    } else {\n      return fetch(`${this._url}/cards/likes/${id}`, {\n        method: \"DELETE\",\n        headers: {\n          authorization: this._token,\n        },\n      }).then(handleOriginalResponse);\n    }\n  }\n\n  updateAvatar(link) {\n    return fetch(`${this._url}/users/me/avatar`, {\n        method: \"PATCH\",\n        headers: {\n          authorization: this._token,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          avatar: link.avatar,\n        }),\n      })\n      .then(handleOriginalResponse);\n  }\n\n\n  getProfileInfo() {\n    return fetch(`${this._url}/users/me`, {\n      method: \"GET\",\n      headers: {\n        authorization: this._token,\n      },\n    }).then(handleOriginalResponse);\n  }\n\n  setProfileInfo(data) {\n    return fetch(`${this._url}/users/me`, {\n      method: \"PATCH\",\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about\n      })\n    }).then(handleOriginalResponse);\n  }\n}\n\nconst api = new Api({\n  url: \"https://mesto.nomoreparties.co/v1/cohort-18\",\n  token: \"e9b15767-4b50-4f24-9b84-b0128a0d1268\",\n})\n\nexport default api;","import React from 'react';\n\n\nfunction PopupWithForm(props) {\n  return (\n    <div className={`popup popup_type_${props.name} ${props.isOpen ? \"popup_opened\" : \"\"}`}>\n      <div className=\"popup__container\">\n        <button className=\"popup__close-icon\" type=\"button\" aria-label=\"Закрыть\" onClick={props.onClose}/>\n        <form className=\"form\" method=\"GET\" action=\"#\" name={`${props.name}`} noValidate onSubmit={props.onSubmit}>\n          <h2 className=\"popup__title\">{props.title}</h2>\n          {props.children}\n          <button className=\"popup__save-button\" type=\"submit\" aria-label={props.button}>{props.button}</button>\n        </form>\n      </div>\n    </div>  \n   \n  );\n}\n\nexport default PopupWithForm;","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport CurrentUserContext from '../context/CurrentUserContext';\n\nfunction EditProfilePopup(props){\n  // подписываемся на контекст о пользователе хуком \n  const currentUser = React.useContext(CurrentUserContext);\n\n  // стейт для значения инпута\n  const [name, setName] = React.useState('');\n  const [description, setDescription] = React.useState('');\n\n  // Обработчик изменения инпута обновляет стейт\n  function handleNameChange(e) {\n    setName(e.target.value);\n  }\n\n  function handleDescriptionChange(e) {\n    setDescription(e.target.value);\n  }\n\n  // После загрузки текущего пользователя из API\n  // его данные будут использованы в управляемых компонентах.\n  React.useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser]); \n\n  function handleSubmit(e) {\n    // Запрещаем браузеру переходить по адресу формы\n    e.preventDefault();\n\n    // Передаём значения управляемых компонентов во внешний обработчик\n    props.onUpdateUser({\n      name: name,\n      about: description,\n    });\n  }\n\n\n  return (\n  <PopupWithForm name={'edit-profile'} title='Редактировать профиль' isOpen={props.isOpen} button=\"Сохранить\" onClose={props.onClose} onSubmit={handleSubmit}> \n    <input maxLength=\"40\" minLength=\"2\" className=\"popup__item popup__item-name\" type=\"text\" name=\"name\" \n      placeholder=\"Ваше имя\" required aria-label=\"попап форма\" onChange={handleNameChange} value={name || ''}/>\n    <span className=\"error\" id=\"name-error\"/>\n    <input maxLength=\"200\" minLength=\"2\" className=\"popup__item popup__item-job\" type=\"text\" name=\"job\" \n      placeholder=\"Род деятельности\" required aria-label=\"попап форма\" onChange={handleDescriptionChange} value={description || ''}/>\n    <span className=\"error\" id=\"job-error\"/>\n  </PopupWithForm>)\n}\n\n\nexport default EditProfilePopup;","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction EditAvatarPopup(props){\n  const inputRef = React.useRef(); \n\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.onUpdateAvatar({\n      avatar: inputRef.current.value,\n    });\n  }\n\n  return (\n    <PopupWithForm name={'update-avatar'} title='Обновить аватар' isOpen={props.isOpen} button=\"Сохранить\" onClose={props.onClose} onSubmit={handleSubmit}>\n      <input ref={inputRef} className=\"popup__item popup__item-link\" type=\"url\" name=\"link\" placeholder=\"Ссылка на аватар\"\n        required aria-label=\"попап форма\"/>\n      <span className=\"error\" id=\"link-error\"/>\n    </PopupWithForm>\n  )\n}\n\nexport default EditAvatarPopup;","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\n\n\nfunction AddPlacePopup(props){\n\n  const inputRefName = React.useRef(); \n  const inputRefLink = React.useRef(); \n\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.onAddPlace({\n      name: inputRefName.current.value,\n      link: inputRefLink.current.value\n    });\n  }\n\n  return (\n    <PopupWithForm name={'add-card'} title='Новое место' button=\"Создать\"\n      isOpen={props.isOpen} \n      onClose={props.onClose}\n      onSubmit={handleSubmit} >\n      <input ref={inputRefName} maxLength=\"30\" minLength=\"1\" className=\"popup__item popup__item-place\" type=\"text\" name=\"name\" \n        placeholder=\"Название\" required aria-label=\"попап форма\" />\n      <span className=\"error\" id=\"name-error\"/>\n      <input ref={inputRefLink} className=\"popup__item popup__item-link\" type=\"url\" name=\"link\" placeholder=\"Ссылка на картинку\"\n        required aria-label=\"попап форма\" />\n      <span className=\"error\" id=\"link-error\"/>\n    </PopupWithForm>\n  )\n}\n\n\nexport default AddPlacePopup;","import React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport ImagePopup from './ImagePopup';\nimport api from '../utils/api';\nimport CurrentUserContext from '../context/CurrentUserContext';\nimport EditProfilePopup from '../components/EditProfilePopup';\nimport EditAvatarPopup from '../components/EditAvatarPopup';\nimport AddPlacePopup from '../components/AddPlacePopup'\n\nfunction App() {\n\n  // устанавливаем стейты для попапов\n  const  [isEditProfilePopupOpen, profilePopupIsOpen] = React.useState(false);\n  const  [isAddPlacePopupOpen, placePopupIsOpen] = React.useState(false);\n  const  [isEditAvatarPopupOpen, avatarPopupIsOpen] = React.useState(false);\n\n  // обработчики открытия попапов\n  const handleEditAvatarClick = () => {\n    avatarPopupIsOpen(true);\n  };\n\n  const handleEditProfileClick = () => {\n    profilePopupIsOpen(true);\n  };\n\n  const handleAddPlaceClick =() => {\n    placePopupIsOpen(true);\n  }\n  // обработчик закрытия попапов\n  const closeAllPopups = () => {\n    avatarPopupIsOpen(\"\");\n    profilePopupIsOpen(\"\");\n    placePopupIsOpen(\"\");\n    imagePopupIsOpen(\"\");\n    selectedCardData({});\n  }\n\n  \n  // стейты для открытия попапов карточек\n  const  [selectedCard, selectedCardData] = React.useState({});\n  const  [isImagePopupOpen, imagePopupIsOpen] = React.useState(false);\n\n  const handleCardClick = (card) => {\n    imagePopupIsOpen(true)\n    selectedCardData(card)\n  }\n\n  // стейт для определения пользоателя\n  const [currentUser, currentUserUpdate] = React.useState({});\n  React.useEffect(() => {\n    api.getProfileInfo()\n      .then(data => {\n        currentUserUpdate(data);\n      })\n      .catch((err) => 'Ошибка: ' + err)\n  }, [])\n\n  function handleUpdateUser(data) {\n    api.setProfileInfo(data)\n      .then(res => {\n        currentUserUpdate(res);\n        closeAllPopups();\n      })\n      .catch((err) => 'Ошибка: ' + err);\n\n  }\n\n  function handleUpdateAvatar(link) {\n    api.updateAvatar(link)\n      .then(res => {\n        console.log(res)\n        currentUserUpdate(res);\n        closeAllPopups();\n      })\n      .catch((err) => 'Ошибка: ' + err)\n  }\n\n  // получаем инфу о карточках\n  const  [cards, setCards] =  React.useState([]);\n  \n  React.useEffect(() => {\n    api.getInitialCards()\n      .then(data => {\n        setCards(data.map((item) => ({\n          _id: item._id,\n          link: item.link,\n          likes: item.likes,\n          name: item.name,\n          owner: item.owner\n      })))})\n      .catch((err) => 'Ошибка: ' + err)\n      \n  }, [])\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(liker => liker._id === currentUser._id);\n    \n    \n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n\n    // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n    const newCards = cards.map((oldCard) => {\n      if (oldCard._id === card._id) { \n        return newCard\n      } \n        else {\n          return  oldCard\n        }\n    });\n    \n    // Обновляем стейт\n    setCards(newCards);\n    })\n    .catch((err) => 'Ошибка: ' + err)\n  } \n\n  function handleCardDelete(card) {\n    // Снова проверяем владельца карточки\n    const isOwn = card.owner._id === currentUser._id;\n\n    // Отправляем запрос в API на удаление карточки\n    api.deleteCard(card._id).then(() => {\n  \n      // Формируем новый массив на основе имеющегося, удаляя из него карточку\n      const newCardsReduced = cards.filter((c) => c._id !== card._id);\n      \n      // Обновляем стейт\n      setCards(newCardsReduced);\n    })\n    .catch((err) => 'Ошибка: ' + err)\n  } \n\n  function handleAddPlaceSubmit(data) {\n    api.addCard(data)\n      .then((newCard) => {\n        setCards([newCard, ...cards]);\n        closeAllPopups(); \n      })\n      .catch((err) => 'Ошибка: ' + err)\n  }\n\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n    <div className=\"page\">\n        <Header />\n\n        <Main \n          onEditAvatar={handleEditAvatarClick} \n          onAddPlace={handleAddPlaceClick} \n          onEditProfile={handleEditProfileClick} \n          onCardClick={handleCardClick} \n          cards={cards} \n          onCardLike={handleCardLike}\n          onCardDelete={handleCardDelete} /> \n\n        <EditProfilePopup \n          isOpen={isEditProfilePopupOpen} \n          onClose={closeAllPopups} \n          onUpdateUser={handleUpdateUser}/> \n\n        <AddPlacePopup \n          isOpen={isAddPlacePopupOpen} \n          onClose={closeAllPopups}\n          onAddPlace={handleAddPlaceSubmit} /> \n\n        <EditAvatarPopup \n          isOpen={isEditAvatarPopupOpen} \n          onClose={closeAllPopups} \n          onUpdateAvatar={handleUpdateAvatar} />\n\n        <ImagePopup \n          isOpen={isImagePopupOpen} \n          onClose={closeAllPopups} \n          card={selectedCard} />\n\n        <Footer /> \n      \n    </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App.js';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}